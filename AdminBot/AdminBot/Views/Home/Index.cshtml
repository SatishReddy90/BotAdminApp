@model IEnumerable<Knowledgebase>

@{
    ViewData["Title"] = "Home Page";
}
<!-- Modal -->
<div class="modal fade" tabindex="-1" id="loginModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Sample HTTP Request</h4>
                <button type="button" class="close" data-dismiss="modal">
                    ×
                </button>
            </div>
            <div class="modal-body">
                POST /knowledgebases/<span id="modal-kbid"></span>/generateAnswer<br />
                Host: <span id="modal-host"></span>/qnamaker <br />
                Authorization: EndpointKey <span id="modal-endpointkey"></span><br />
                Content-Type: application/json<br />
                {"question":"&lt; question &gt;"}<br />
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<!-- The Modal -->
<div class="modal" id="deleteModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Delete Knowledge base</h4>
                <button type="button" class="close" data-dismiss="modal" onclick="cancelDelete()">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                Do you really want to delete this knowledge base? This process cannot be undone.
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="cancelDelete()">Cancel</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="deleteKB()">Delete</button>
            </div>

        </div>
    </div>
</div>
@if (Model.Count() == 0)
{
    <p><strong>The system is busy right now, please try after some time.</strong></p>
}
@if (Model.Count() > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastChangedTimestamp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastPublishedTimestamp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HostName)
                </th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastChangedTimestamp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastPublishedTimestamp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HostName)
                </td>
                <td>
                    @if (item.IsEnabled)
                    {
                        <button type="button" class="btn btn-danger" onclick="disableKB('@item.Id')">Disable</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-success" onclick="enableKB('@item.Id')">Enable</button>
                    }
                </td>
                <td>
                    <button type="button" class="btn btn-info" onclick="viewKBInfo('@item.Id')">Info</button>
                </td>
                <td>
                    <button type="button" class="btn btn-primary">Edit</button>
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="confirmDeleteModal('@item.Id')">Delete</button>
                </td>
            </tr>
            }
            @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="6">
                        <p>No knowledge bases to display.</p>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<div id="loader"></div>


<script type="text/javascript">
    var requestUrl = "@ViewData["QnADeleteUrl"]";
    var subkey = "@ViewData["QnASubScriptionKey"]";
    var endpointKeyUrl = "@ViewData["QnAEndpointkeyUrl"]";
    var qnaGetUrl = "@ViewData["QnAGetUrl"]";
    var botBaseUrl = "@ViewData["BotBaseUrl"]";
    var _kbid = "";
    var model = @Html.Raw(Json.Serialize(Model));

    function confirmDeleteModal(kbid) {
        _kbid = kbid;
        $("#deleteModal").modal('show');
    }
    function cancelDelete() {
        _kbid = "";
    }
    function displayLoader() {
        $('#loader').addClass("loader");
    }
    function hideLoader() {
        $('#loader').removeClass("loader");
    }
    function deleteKB() {
        if (_kbid !== "") {
            displayLoader();
            $.ajax({
                url: requestUrl + "/" + _kbid,
                beforeSend: function (xhrObj) {
                    // Request headers
                    xhrObj.setRequestHeader("Ocp-Apim-Subscription-Key", subkey);
                },
                type: "DELETE",

            })
                .done(function (response) {
                    toastr.success("The knowledge base has been deleted successfully!");
                    console.log(response);
                    hideLoader();
                    window.location.href = "/";
                })
                .fail(function (response) {
                    toastr.error(response.responseText, response.statusText);
                    hideLoader();
                });
        }
    }

    function viewKBInfo(kbid) {
        $.ajax({
            url: endpointKeyUrl,
            beforeSend: function (xhrObj) {
                // Request headers
                xhrObj.setRequestHeader("Ocp-Apim-Subscription-Key", subkey);
            },
            type: "GET",

        })
            .done(function (endpointResponse) {
                $.ajax({
                    url: qnaGetUrl + "/" + kbid,
                    beforeSend: function (xhrObj) {
                        // Request headers
                        xhrObj.setRequestHeader("Ocp-Apim-Subscription-Key", subkey);
                    },
                    type: "GET",

                })
                    .done(function (response) {
                        $("#modal-endpointkey").text(endpointResponse.primaryEndpointKey);
                        $("#modal-kbid").text(kbid);
                        $("#modal-host").text(response.hostName);
                        $("#loginModal").modal('show');
                    })
                    .fail(function (response) {
                        toastr.error(response.responseText, response.statusText);
                        hideLoader();
                    });
               
            })
            .fail(function (endpointResponse) {
                toastr.error(endpointResponse.responseText, endpointResponse.statusText);
                hideLoader();
            });
       
    }
    function disableKB(kbid) {
        displayLoader();
        $.ajax({
            url: botBaseUrl + "/api/BotConfiguration/DeleteQnaService?kbid=" + kbid,
            method: "DELETE",
            //data: { "kbid": kbid },
            dataTye: "application/json"
        })
            .done(function (data, textStatus, jqXHR) {
                toastr.success("The knowledge base has been disabled successfully!");
                window.location.href = "/";
            })
            .fail(function (response) {
                toastr.error(response.responseText, response.statusText);
            })
            .always(function () {
                hideLoader();
            });
    }

    function enableKB(item) {
        displayLoader();
        var qnaArray = $.grep(model, function (n, i) {
            return n.id === item;
        });
        if (qnaArray.length > 0) {
            var qnaModel = qnaArray[0];
            var qnaServiceInfo = {
                type: "qna",
                hostName: qnaModel.hostName,
                kbId: qnaModel.id,
                name: qnaModel.name,
                subscriptionKey: subkey
            };
            $.ajax({
                url: endpointKeyUrl,
                beforeSend: function (xhrObj) {
                    // Request headers
                    xhrObj.setRequestHeader("Ocp-Apim-Subscription-Key", subkey);
                },
                type: "GET",

            })
                .done(function (endpointResponse) {
                    qnaServiceInfo.endpointKey = endpointResponse.primaryEndpointKey;
                    addQnaToBot(qnaServiceInfo);
                })
                .fail(function (response) {
                    toastr.error(response.responseText, response.statusText);
                    hideLoader();
                });
        }
    }
    function addQnaToBot(qnaServiceInfo) {
        $.ajax({
            url: botBaseUrl + "/api/BotConfiguration/AddQna",
            method: "POST",
            contentType: "application/json",
            data: JSON.stringify(qnaServiceInfo)
        })
            .done(function (response) {
                toastr.success("The knowledge base has been enabled successfully!");
                window.location.href = "/";
            })
            .fail(function (response) {
                toastr.error(response.responseText, response.statusText);
            })
            .always(function () {
                hideLoader();
            });
    }
</script>